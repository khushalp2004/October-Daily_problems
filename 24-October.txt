////2048. Next Greater Numerically Balanced Number

typedef long long ll;
    int generateNum(int n) {
        vector<ll> all;
        for (int mask = 1; mask < (1 << 9); ++mask) {
            string s;
            int total = 0;
            for (int i = 0; i < 9; ++i) {
                if (mask & (1 << i)) {
                    int d = i + 1;
                    s.append(d, char('0' + d));
                    total += d;
                }
            }
            if (total == 0 || total > 9)
                continue; // keep permutations bounded

            sort(s.begin(), s.end());
            // generate unique permutations
            do {
                if (s[0] == '0')
                    continue; // safety
                ll val = stoll(s);
                all.push_back(val);
            } while (next_permutation(s.begin(), s.end()));
        }

        sort(all.begin(), all.end());
        all.erase(unique(all.begin(), all.end()), all.end());

        auto it = upper_bound(all.begin(), all.end(), n);
        if (it == all.end())
            return -1;
        return (int)(*it);
    }
    int nextBeautifulNumber(int n) { return generateNum(n); }